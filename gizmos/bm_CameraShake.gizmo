set cut_paste_input [stack 0]
version 13.2 v8
push $cut_paste_input
Group {
 name bm_CameraShake
 onCreate "if nuke.GUI:\n    \n    # Hide the knob sliders.\n    nuke.thisNode().knob('motionblur_gui_samples').clearFlag(0x0000000000000002)\n    nuke.thisNode().knob('motionblur_gui_samples').setFlag(0x0000100000000000)\n    nuke.thisNode().knob('motionblur_render_samples').clearFlag(0x0000000000000002)\n    nuke.thisNode().knob('motionblur_render_samples').setFlag(0x0000100000000000)\n                \n    # Randomize the random seed if it's the first time the node is created.\n    if not nuke.thisNode().knob(\"random_seed_check\").value():\n        nuke.thisNode().knob(\"random_seed\").setValue(random.randint(1,99999))\n        nuke.thisNode().knob(\"random_seed_check\").setValue(True)\n        \n    # Hide gizmo's viewer handles.\n    knobs = ('jitter_translation', 'jitter_translation_output', 'jitter_rotation', 'jitter_rotation_output', 'shake_translation', 'shake_translation_output', 'shake_rotation', 'shake_rotation_output', 'float_translation', 'float_translation_output', 'float_rotation', 'float_rotation_output')\n    internal_knobs = ('combined_translation_curve', 'combined_rotation_curve')\n    \n    for knob in knobs:\n        if nuke.thisNode().knob(knob):\n            nuke.thisNode().knob(knob).setFlag(0x0000002000000000)\n            \n    # Hide user knobs' viewer handles for Transform node inside the gizmo.\n    with nuke.thisNode():\n        for knob in internal_knobs:\n            if nuke.toNode(\"Camera_Shake_Output\").knob(knob):\n                nuke.toNode(\"Camera_Shake_Output\").knob(knob).setFlag(0x0000002000000000)\n    "
 knobChanged "if nuke.GUI:\n    \n    for knob_name in (\"jitter\", \"shake\", \"float\", \"shake_center\"):\n        current_value = nuke.thisNode().knob(f\"\{knob_name\}_chk\").value()\n        nuke.thisNode().knob(f\"\{knob_name\}_text\").setEnabled(current_value)\n        nuke.thisNode().knob(f\"\{knob_name\}_amount\").setEnabled(current_value)"
 tile_color 0x222222ff
 selected true
 xpos 119
 ypos -241
 addUserKnob {20 options_tab l Options}
 addUserKnob {26 ""}
 addUserKnob {6 view_test_pattern l "View Test Pattern?" t "View a checkerboard test pattern instead of your shot." +STARTLINE}
 view_test_pattern true
 addUserKnob {26 ""}
 addUserKnob {26 setup_heading l "" +STARTLINE T "<b>CAMERA SHAKE SETUP</b>\n<br>"}
 addUserKnob {3 reference_frame l "Reference Frame" t "Sets a time-based pivot-point from where to adjust the curve.\n\n<i>(This helps prevent the entire camera shake changing when you just want to slow down the frequency a little bit)</i>"}
 reference_frame 1001
 addUserKnob {22 set_ref_frame_btn l "Set to Current Frame" t "Set the Reference Frame to the current frame in the Viewer." -STARTLINE T nuke.thisNode().knob('reference_frame').setValue(nuke.frame())}
 addUserKnob {3 random_seed l "Random Seed" t "Randomize the Camera Shake."}
 random_seed 303
 addUserKnob {22 random_seed_btn l "Randomize Seed" -STARTLINE T "import random\nnuke.thisNode().knob('random_seed').setValue(random.randint(1,99999))"}
 addUserKnob {6 random_seed_check t "Hidden knob which checks itself when the node is created. This prevents the random seed from randomizing every time the nuck script is opened." -STARTLINE +INVISIBLE}
 random_seed_check true
 addUserKnob {26 spacer_02 l " " T " "}
 addUserKnob {26 jitter_text l Jitter t "Use <b>Jitter</b> to introduce a high-frequency jitter to the overall camera shake.\n\nThis is helpful to add complexity, like you might see with wind buffeting, etc." T " "}
 addUserKnob {6 jitter_chk l "" t "Use <b>Jitter</b> to introduce a high-frequency jitter to the overall camera shake.\n\nThis is helpful to add complexity, like you might see with wind buffeting, etc." -STARTLINE}
 jitter_chk true
 addUserKnob {7 jitter_amount l " " t "Global multiplier for the Jitter curve.\n\nUse <b>Jitter</b> to introduce a high-frequency jitter to the overall camera shake.\n\nThis is helpful to add complexity, like you might see with wind buffeting, etc." -STARTLINE}
 jitter_amount 1
 addUserKnob {26 shake_text l Shake t "Use <b>Shake</b> to control the overall look of your camera shake." T " "}
 addUserKnob {6 shake_chk l "" t "Use <b>Shake</b> to control the overall look of your camera shake." -STARTLINE}
 shake_chk true
 addUserKnob {7 shake_amount l " " t "Global multiplier for the Shake curve.\n\nUse <b>Shake</b> to control the overall look of your camera shake." -STARTLINE}
 shake_amount 1
 addUserKnob {26 float_text l Float t "Use <b>Float</b> to introduce an overall handheld feel to your camera shake." T " "}
 addUserKnob {6 float_chk l "" t "Use <b>Float</b> to introduce an overall handheld feel to your camera shake." -STARTLINE}
 float_chk true
 addUserKnob {7 float_amount l " " t "Global multiplier for the Float curve.\n\nUse <b>Float</b> to introduce an overall handheld feel to your camera shake." -STARTLINE}
 float_amount 1
 addUserKnob {26 shake_center_text l "Shake Center" t "When using rotation in your camera shake, also shaking the center-point can introduce a more-organic handheld feel.\n\nIt changes the pivot-point of the rotation on every frame." +DISABLED T " "}
 addUserKnob {6 shake_center_chk l "" t "When using rotation in your camera shake, also shaking the center-point can introduce a more-organic handheld feel.\n\nIt changes the pivot-point of the rotation on every frame." -STARTLINE}
 addUserKnob {7 shake_center_amount l " " t "Multiplier for how much to shake the centrepoint. 1 = the same amount as translate.\n<hr>\nWhen using rotation in your camera shake, also shaking the center-point can introduce a more-organic handheld feel.\n\nIt changes the pivot-point of the rotation on every frame." -STARTLINE +DISABLED R 0 2}
 shake_center_amount 1
 addUserKnob {26 spacer_01 l "" +STARTLINE T " "}
 addUserKnob {4 edge_compensation l "Edge Compensation" t "Helps to manage pixels outside the bbox." M {None Mirror Repeat Spread}}
 edge_compensation Mirror
 addUserKnob {6 crop_bbox_chk l "Crop to Input bbox" t "Crops the bbox to the input-node's bbox." +STARTLINE}
 crop_bbox_chk true
 addUserKnob {26 ""}
 addUserKnob {26 motionblur_heading l "" +STARTLINE T "<b>MOTION BLUR</b>\n<br>"}
 addUserKnob {22 auto_motionblur_toggle_btn l "Automatically Calculate Motionblur <font color=grey>(beta)</font>" t "Pressing this button will switch from Manual mode (current) to Experimental mode." T "experimental_tooltip = \"\"\"<b>EXPERIMENTAL</b><br>\nAdjusts motion blur samples based on the speed of the curve.\n\nThis is calculated by getting the highest derivative value of X/Y translation curves, then multiplying it by 1 + the rotation curve's derivative.\n\nValues are clamped between minimum of 4, and maximum of 64.\n\"\"\"\n\n\nif nuke.thisKnob().label() == \"Automatically Calculate Motionblur <font color=grey>(beta)</font>\":\n    \n    nuke.thisKnob().setLabel(\"<font>Switch to Manual Motionblur</font>\")\n\n    nuke.thisNode().knob(\"motionblur_gui_samples\").setExpression(\"max(1, motionblur_render_samples/4)\")\n    nuke.thisNode().knob(\"motionblur_render_samples\").setExpression(\"max(1, clamp(abs(rint((max(global_translation_output.y.derivative, global_translation_output.y.derivative) / 2) * (global_rotation_output.derivative + 1))), 4, 64) * multiply_auto_motionblur_samples)\")\n    \n    nuke.thisKnob().setTooltip(\"Pressing this button will switch from Experimental mode (current) to Manual mode.\")\n    nuke.thisNode().knob(\"motionblur_gui_samples\").setTooltip(\"Calculated as 25% of the render samples.\")\n    nuke.thisNode().knob(\"motionblur_render_samples\").setTooltip(experimental_tooltip)\n    \n    nuke.thisNode().knob(\"multiply_auto_motionblur_samples\").setVisible(True)\n    \nelse:\n    \n    nuke.thisKnob().setLabel(\"Automatically Calculate Motionblur <font color=grey>(beta)</font>\")\n\n    nuke.thisNode().knob(\"motionblur_gui_samples\").clearAnimated()\n    nuke.thisNode().knob(\"motionblur_render_samples\").clearAnimated()\n    nuke.thisNode().knob(\"motionblur_gui_samples\").setValue(4)\n    nuke.thisNode().knob(\"motionblur_render_samples\").setValue(16)\n    \n    nuke.thisKnob().setTooltip(\"Pressing this button will switch from Manual mode (current) to Experimental mode.\")\n    nuke.thisNode().knob(\"motionblur_gui_samples\").setTooltip(\"How many samples to use when viewing in your active nuke session (GUI).\")\n    nuke.thisNode().knob(\"motionblur_render_samples\").setTooltip(\"How many samples to use when rendering on the farm.\")\n    \n    nuke.thisNode().knob(\"multiply_auto_motionblur_samples\").setVisible(False)" +STARTLINE}
 addUserKnob {26 spacer_03 l "" +STARTLINE T " "}
 addUserKnob {41 filter l Filter T Camera_Shake_Output.filter}
 addUserKnob {41 clamp -STARTLINE +INVISIBLE T Camera_Shake_Output.clamp}
 addUserKnob {41 black_outside l "black outside" -STARTLINE +INVISIBLE T Camera_Shake_Output.black_outside}
 addUserKnob {7 motionblur_gui_samples l "GUI / Render samples" t "How many samples to use when viewing in your active nuke session (GUI)." R 0 4}
 motionblur_gui_samples 4
 addUserKnob {7 motionblur_render_samples l " " t "How many samples to use when rendering on the farm." -STARTLINE}
 motionblur_render_samples 16
 addUserKnob {7 multiply_auto_motionblur_samples l "Multiply Samples" t "Multiplies the GUI / Render samples. Use this if your motionblur is noisy." +HIDDEN R 1 3}
 multiply_auto_motionblur_samples 1
 addUserKnob {41 shutter l Shutter T Camera_Shake_Output.shutter}
 addUserKnob {26 ""}
 addUserKnob {26 output_heading l "" +STARTLINE T "<b>OUTPUT</b>\n<br>\n<br>\n<font color=grey>Load these values into the <b>Curve Editor</b> to view the output animation curve.</font><br>"}
 addUserKnob {7 global_amount l "Global Amount Multiplier" t "Global multiplier for the camera shake curve."}
 global_amount 1
 addUserKnob {41 smooth_curve l "Smooth Curve" t "If you are getting crazy swirly motionblur, increase the <b>Smooth Curve</b> amount to reduce the subframe complexity of your overall camera shake.\n\nIncreasing this value past 1 also lowers the octaves of Jitter, Shake and Float's fBm noise curve." T Camera_Shake_Output.smooth_curve}
 addUserKnob {41 global_translation_output l Translation t "The output Translation curve of Jitter, Shake and Float combined + any smoothing.\n<hr color=\"grey\">" T Camera_Shake_Output.translate}
 addUserKnob {41 global_rotation_output l Rotation t "The output Rotation curve of Jitter, Shake and Float combined + any smoothing.\n<hr color=grey>" T Camera_Shake_Output.rotate}
 addUserKnob {26 ""}
 addUserKnob {26 version_info l " " T "<font color='#777'><b>bm_CameraShake v5.0</b></font><font color='#555'> created by </font><b><a href=\"https://github.com/BenMcEwan/nuke_public\" style=\"color:#777;\">Ben McEwan</a></b>.<br>\n<font color='#555'><b>Last updated:</b> 20th February, 2025.</font>"}
 addUserKnob {20 jitter_tab l Jitter}
 addUserKnob {26 ""}
 addUserKnob {12 jitter_translation l "Translation (max)" t "The maximum amount of Translation the Jitter curve can have."}
 jitter_translation {1.5 1.5}
 addUserKnob {7 jitter_rotation l "Rotation (max)" t "The maximum amount of Rotation the Jitter curve can have." R 0 3}
 jitter_rotation 0.05
 addUserKnob {26 ""}
 addUserKnob {3 jitter_octaves l Octaves t "Max subframes. Reduce this if you are getting crazy motionblur."}
 jitter_octaves 3
 addUserKnob {7 jitter_lacunarity l Lacunarity t "Adds frequency (detail) in subframes.\n\nLower values smooth the curve, whereas higher values add more noise." R 0 3}
 jitter_lacunarity 3
 addUserKnob {7 jitter_frequency l Frequency t "Controls the speed of the camera shake. Lower values are slower, Higher values are faster." R 0 3}
 jitter_frequency 2
 addUserKnob {7 jitter_gain l Gain t "Controls the bias of the curve towards exteme peaks (1) and smooth curves (0)."}
 jitter_gain 0.5
 addUserKnob {26 ""}
 addUserKnob {26 jitter_output_text l "" +STARTLINE T "<font color=grey>Load these values into the <b>Curve Editor</b> to view the <b>Jitter</b> animation curve.</font><br>"}
 addUserKnob {12 jitter_translation_output l "Jitter Translation Output"}
 jitter_translation_output {{"fBm(((random_seed + (frame - reference_frame) * jitter_frequency) + reference_frame), 0.5, 0.5, (clamp(jitter_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), jitter_lacunarity, jitter_gain) * jitter_translation.x * global_amount * jitter_amount"} {"fBm(((random_seed + 1000 + (frame - reference_frame) * jitter_frequency) + reference_frame), 0.5, 0.5, (clamp(jitter_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), jitter_lacunarity, jitter_gain) * jitter_translation.y * global_amount * jitter_amount"}}
 addUserKnob {7 jitter_rotation_output l "Jitter Rotation Output" R -10 10}
 jitter_rotation_output {{"fBm(((random_seed + 2000 + (frame - reference_frame) * jitter_frequency) + reference_frame), 0.5, 0.5, (clamp(jitter_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), jitter_lacunarity, jitter_gain) * jitter_rotation * global_amount * jitter_amount"}}
 addUserKnob {26 ""}
 addUserKnob {20 shake_tab l Shake}
 addUserKnob {26 ""}
 addUserKnob {12 shake_translation l "Translation (max)" t "The maximum amount of Translation the Shake curve can have."}
 shake_translation {30 30}
 addUserKnob {7 shake_rotation l "Rotation (max)" t "The maximum amount of Rotation the Shake curve can have." R 0 3}
 shake_rotation 0.5
 addUserKnob {26 ""}
 addUserKnob {3 shake_octaves l Octaves t "Max subframes. Reduce this if you are getting crazy motionblur."}
 shake_octaves 3
 addUserKnob {7 shake_lacunarity l Lacunarity t "Adds frequency (detail) in subframes.\n\nLower values smooth the curve, whereas higher values add more noise." R 0 3}
 shake_lacunarity 3
 addUserKnob {7 shake_frequency l Frequency t "Controls the speed of the camera shake. Lower values are slower, Higher values are faster." R 0 3}
 shake_frequency 0.2
 addUserKnob {7 shake_gain l Gain t "Controls the bias of the curve towards exteme peaks (1) and smooth curves (0)."}
 shake_gain 0.7
 addUserKnob {26 ""}
 addUserKnob {26 shake_output_text l "" +STARTLINE T "<font color=grey>Load these values into the <b>Curve Editor</b> to view the <b>Shake</b> animation curve.</font><br>"}
 addUserKnob {12 shake_translation_output l "Shake Translation Output"}
 shake_translation_output {{"fBm(((random_seed + (frame - reference_frame) * shake_frequency) + reference_frame), 0.5, 0.5, (clamp(shake_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), shake_lacunarity, shake_gain) * shake_translation.x * global_amount * shake_amount"} {"fBm(((random_seed + 1000 + (frame - reference_frame) * shake_frequency) + reference_frame), 0.5, 0.5, (clamp(shake_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), shake_lacunarity, shake_gain) * shake_translation.y * global_amount * shake_amount"}}
 addUserKnob {7 shake_rotation_output l "Shake Rotation Output" R -10 10}
 shake_rotation_output {{"fBm(((random_seed + 2000 + (frame - reference_frame) * shake_frequency) + reference_frame), 0.5, 0.5, (clamp(shake_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), shake_lacunarity, shake_gain) * shake_rotation * global_amount * shake_amount"}}
 addUserKnob {26 ""}
 addUserKnob {20 float_tab l Float}
 addUserKnob {26 ""}
 addUserKnob {12 float_translation l "Translation (max)" t "The maximum amount of Translation the Float curve can have."}
 float_translation {50 50}
 addUserKnob {7 float_rotation l "Rotation (max)" t "The maximum amount of Rotation the Float curve can have." R 0 3}
 float_rotation 1
 addUserKnob {26 ""}
 addUserKnob {3 float_octaves l Octaves t "Max subframes. Reduce this if you are getting crazy motionblur."}
 float_octaves 1
 addUserKnob {7 float_lacunarity l Lacunarity t "Adds frequency (detail) in subframes.\n\nLower values smooth the curve, whereas higher values add more noise." R 0 3}
 float_lacunarity 2
 addUserKnob {7 float_frequency l Frequency t "Controls the speed of the camera shake. Lower values are slower, Higher values are faster." R 0 3}
 float_frequency 0.02
 addUserKnob {7 float_gain l Gain t "Controls the bias of the curve towards exteme peaks (1) and smooth curves (0)."}
 float_gain 1
 addUserKnob {26 ""}
 addUserKnob {26 float_output_text l "" +STARTLINE T "<font color=grey>Load these values into the <b>Curve Editor</b> to view the <b>Float</b> animation curve.</font><br>"}
 addUserKnob {12 float_translation_output l "Float Translation Output"}
 float_translation_output {{"fBm(((random_seed + (frame - reference_frame) * float_frequency) + reference_frame), 0.5, 0.5, (clamp(float_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), float_lacunarity, float_gain) * float_translation.x * global_amount * float_amount"} {"fBm(((random_seed + 1000 + (frame - reference_frame) * float_frequency) + reference_frame), 0.5, 0.5, (clamp(float_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), float_lacunarity, float_gain) * float_translation.y * global_amount * float_amount"}}
 addUserKnob {7 float_rotation_output l "Float Rotation Output" R -10 10}
 float_rotation_output {{"fBm(((random_seed + 2000 + (frame - reference_frame) * float_frequency) + reference_frame), 0.5, 0.5, (clamp(float_octaves - clamp((smooth_curve - 1), 0, 10), 0, 10)), float_lacunarity, float_gain) * float_rotation * global_amount * float_amount"}}
 addUserKnob {26 ""}
}
 CheckerBoard2 {
  inputs 0
  linecolor 0
  linewidth 60
  name CheckerBoard1
  xpos -157
  ypos -33
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  box_pixel_aspect {{Switch1.pixel_aspect}}
  resize distort
  name Reformat1
  xpos -157
  ypos 39
 }
 Input {
  inputs 0
  name Input
  xpos -1
  ypos -59
 }
 Switch {
  inputs 2
  which {{view_test_pattern}}
  name Switch1
  xpos -1
  ypos 39
 }
 AdjBBox {
  numpixels {{"abs(Camera_Shake_Output.translate.x - (Camera_Shake_Output.center.x - (format.w / 2))) + ( (format.w * abs(cos(Camera_Shake_Output.rotate*0.0174533)) + format.h * abs(sin(Camera_Shake_Output.rotate*0.0174533)) - format.w)/2 )"} {"abs(Camera_Shake_Output.translate.y - (Camera_Shake_Output.center.y - (format.h / 2))) + ( (format.w * abs(sin(Camera_Shake_Output.rotate*0.0174533)) + format.h * abs(cos(Camera_Shake_Output.rotate*0.0174533)) - format.h)/2 )\n"}}
  name AdjBBox1
  xpos -1
  ypos 91
  disable {{"!min(edge_compensation, 1)"}}
 }
set N1750b0d0 [stack 0]
 Expression {
  expr0 "r(max(0, min(width-1, x - translate_offset.x)), max(0, min(height-1, y - translate_offset.y)))"
  expr1 "g(max(0, min(width-1, x - translate_offset.x)), max(0, min(height-1, y - translate_offset.y)))"
  expr2 "b(max(0, min(width-1, x - translate_offset.x)), max(0, min(height-1, y - translate_offset.y)))"
  channel3 alpha
  expr3 "a(max(0, min(width-1, x - translate_offset.x)), max(0, min(height-1, y - translate_offset.y)))"
  name Spread_Edges
  xpos 325
  ypos 148
  addUserKnob {20 User}
  addUserKnob {12 translate_offset}
 }
push $N1750b0d0
 Expression {
  expr0 "r((x - translate_offset.x + width *100) % width, (y - translate_offset.y + height * 100) % height)"
  expr1 "g((x - translate_offset.x + width * 100) % width, (y - translate_offset.y + height * 100) % height)"
  expr2 "b((x - translate_offset.x + width * 100) % width, (y - translate_offset.y + height * 100) % height)"
  channel3 alpha
  expr3 "a((x - translate_offset.x + width * 100) % width, (y - translate_offset.y + height * 100) % height)"
  name Repeat_Edges
  xpos 192
  ypos 148
  addUserKnob {20 User}
  addUserKnob {12 translate_offset}
 }
push $N1750b0d0
 Expression {
  expr0 "r(width - abs(((x - translate_offset.x + width*100) % (2*width)) - width),\nheight - abs(((y - translate_offset.y + height*100) % (2*height)) - height))"
  expr1 "g(width - abs(((x - translate_offset.x + width*100) % (2*width)) - width),\nheight - abs(((y - translate_offset.y + height*100) % (2*height)) - height))"
  expr2 "b(width - abs(((x - translate_offset.x + width*100) % (2*width)) - width),\nheight - abs(((y - translate_offset.y + height*100) % (2*height)) - height))"
  channel3 alpha
  expr3 "a(width - abs(((x - translate_offset.x + width*100) % (2*width)) - width),\nheight - abs(((y - translate_offset.y + height*100) % (2*height)) - height))"
  name Mirror_Edges
  xpos 70
  ypos 146
  addUserKnob {20 User}
  addUserKnob {12 translate_offset}
 }
push $N1750b0d0
 Switch {
  inputs 4
  which {{edge_compensation}}
  name Switch2
  xpos -1
  ypos 204
 }
 Transform {
  translate {{"smooth_curve > 0 ? combined_translation_curve.x.integrate(frame - (smooth_curve / 2), frame + (smooth_curve / 2)) / smooth_curve : combined_translation_curve.x"} {"smooth_curve > 0 ? combined_translation_curve.y.integrate(frame - (smooth_curve / 2), frame + (smooth_curve / 2)) / smooth_curve : combined_translation_curve.y"}}
  rotate {{"smooth_curve > 0 ? combined_rotation_curve.integrate(frame - (smooth_curve / 2), frame + (smooth_curve / 2)) / smooth_curve : combined_rotation_curve"}}
  center {{"shake_center_chk ? (input.width/2) - (shake_center_amount * translate.x(frame+1000)) : (input.width/2)"} {"shake_center_chk ? (input.height/2) - (shake_center_amount * translate.x(frame+2000)) : (input.height/2)"}}
  black_outside false
  motionblur {{"\$gui ? motionblur_gui_samples : motionblur_render_samples"}}
  shutteroffset centred
  name Camera_Shake_Output
  xpos 1
  ypos 275
  addUserKnob {20 User}
  addUserKnob {7 smooth_curve R 0 2}
  addUserKnob {12 combined_translation_curve}
  combined_translation_curve {{"(jitter_chk ? jitter_translation_output.x : 0) + (shake_chk ? shake_translation_output.x : 0) + (float_chk ? float_translation_output.x : 0)"} {"(jitter_chk ? jitter_translation_output.y : 0) + (shake_chk ? shake_translation_output.y : 0) + (float_chk ? float_translation_output.y : 0)"}}
  addUserKnob {7 combined_rotation_curve}
  combined_rotation_curve {{"(jitter_chk ? jitter_rotation_output : 0) + (shake_chk ? shake_rotation_output : 0) + (float_chk ? float_rotation_output : 0)"}}
 }
 Crop {
  box {{Switch1.bbox.x} {Switch1.bbox.y} {Switch1.bbox.r} {Switch1.bbox.t}}
  name Crop1
  xpos 1
  ypos 326
  disable {{!crop_bbox_chk}}
 }
 Output {
  name Output1
  xpos 1
  ypos 388
 }
end_group
